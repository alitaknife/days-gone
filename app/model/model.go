// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package model

import (
	"github.com/gogf/gf/os/gtime"
)

// File is the golang structure for table file.
type File struct {
	Id       int         `orm:"id,primary"       json:"id"`       //
	FileSha1 string      `orm:"file_sha1,unique" json:"fileSha1"` // 文件hash
	FileName string      `orm:"file_name"        json:"fileName"` // 文件名
	FileSize int64       `orm:"file_size"        json:"fileSize"` // 文件大小
	FileAddr string      `orm:"file_addr"        json:"fileAddr"` // 文件存储位置
	CreateAt *gtime.Time `orm:"create_at"        json:"createAt"` // 创建日期
	UpdateAt *gtime.Time `orm:"update_at"        json:"updateAt"` // 更新日期
	Status   int         `orm:"status"           json:"status"`   // 状态(可用/禁用/已删除等状态)
	Ext1     int         `orm:"ext1"             json:"ext1"`     // 备用字段1
	Ext2     string      `orm:"ext2"             json:"ext2"`     // 备用字段2
}

// User is the golang structure for table user.
type User struct {
	Id             int         `orm:"id,primary"       json:"id"`             //
	UserName       string      `orm:"user_name,unique" json:"userName"`       // 用户名
	UserNickname   string      `orm:"user_nickname"    json:"userNickname"`   // 用户昵称
	UserPwd        string      `orm:"user_pwd"         json:"userPwd"`        // 用户encoded密码
	Salt           string      `orm:"salt"             json:"salt"`           // 密码盐
	Avatar         string      `orm:"avatar"           json:"avatar"`         // 用户头像
	Sex            int         `orm:"sex"              json:"sex"`            // 性别;0:女,1:男,2:保密
	Email          string      `orm:"email"            json:"email"`          // 邮箱
	Phone          string      `orm:"phone"            json:"phone"`          // 手机号
	EmailValidated int         `orm:"email_validated"  json:"emailValidated"` // 邮箱是否已验证
	PhoneValidated int         `orm:"phone_validated"  json:"phoneValidated"` // 手机号是否已验证
	SignUpAt       *gtime.Time `orm:"sign_up_at"       json:"signUpAt"`       // 注册日期
	LastActive     *gtime.Time `orm:"last_active"      json:"lastActive"`     // 最后活跃时间戳
	Profile        string      `orm:"profile"          json:"profile"`        // 用户属性
	Status         int         `orm:"status"           json:"status"`         // 账户状态(启用/禁用/锁定/标记删除等)
}

// UserFile is the golang structure for table user_file.
type UserFile struct {
	Id         int         `orm:"id,primary"  json:"id"`         //
	UserName   string      `orm:"user_name"   json:"userName"`   //
	FileSha1   string      `orm:"file_sha1"   json:"fileSha1"`   // 文件hash
	FileSize   int64       `orm:"file_size"   json:"fileSize"`   // 文件大小
	FileName   string      `orm:"file_name"   json:"fileName"`   // 文件名
	UploadAt   *gtime.Time `orm:"upload_at"   json:"uploadAt"`   // 上传时间
	LastUpdate *gtime.Time `orm:"last_update" json:"lastUpdate"` // 最后修改时间
	Status     int         `orm:"status"      json:"status"`     // 文件状态(0正常1禁用2已删除)
}
